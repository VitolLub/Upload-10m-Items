var cm = new CommonMemory();function ajax(adr, args, handl, errf) {  var oXmlHttp = createXMLHttp();  oXmlHttp.open("POST", adr, true);  oXmlHttp.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");  oXmlHttp.onreadystatechange = function () {    if (oXmlHttp.readyState == 4) {      if (oXmlHttp.status == 200) {        handl(oXmlHttp.responseText);      } else {        errf(oXmlHttp.statusText);      }      delete oXmlHttp;    }  };  if (typeof args == 'object') {    var _args = [];    for (var n in args) {      _args.push(n + '=' + encodeURIComponent(args[n]));    }    args = _args.join('&');  }  oXmlHttp.send(args);  function createXMLHttp() {    if (typeof XMLHttpRequest != "undefined") {      return new XMLHttpRequest();    } else if (window.ActiveXObject) {      var aVersions = ["MSXML2.XMLHttp.5.0", "MSXML2.XMLHttp.4.0",                       "MSXML2.XMLHttp.3.0", "MSXML2.XMLHttp",                       "Microsoft.XMLHttp"];      for (var i = 0; i < aVersions.length; i++) {        try { //          var oXmlHttp = new ActiveXObject(aVersions[i]);          return oXmlHttp;        } catch (oError) {        }      }    }  }}function seytStateListener() {  let getStateInterval = setInterval(() => {    let $seytDynamic = $('.seyt-page-dynamic');    let $status = $('#seyt-page-status');    if ($status.length) {      if ('Неактивно' === $status.html()) {        $seytDynamic.hide();      }      chrome.runtime.sendMessage({query: 'checkSeytPageState'}, (response) => {        // Чтобы не дергать DOM попусту будем дергать его только если надо изменить.        if (response.isRunning) {          if ('Активно' !== $status.html()) {            $status.html('Активно');            $seytDynamic.show();          }        }        else if ('Неактивно' !== $status.html()) {          $status.html('Неактивно');          $seytDynamic.hide();        }      });    }    else {      clearInterval(getStateInterval);    }  }, 200);}/** * Элемент с иконкой вложен в кнопку. * Поэтому можно поймать клик как на нём, так и на кнопке (есть место между иконкой и границами кнопки). * Функция возвращает в любом случае элемент иконки, * чтобы вызывающий код не заботился о том, где именно был клик. * * @param event * @returns {*} */function getCpaUpdateClickTarget(event) {  let target = event.target;  if (target.id === '_se-update_btn') {    target = target.querySelector('.fas');  }  return target;}function fillCpaElement(userCpaEl, data) {  let rewardHtml = `<span class="reward">${data.reward}</span>`;  let runHtml = `<a href=${data.task_url} target=_blank>Выполнить задание >></a>`;  let msgHtml = `${rewardHtml}<br>${runHtml}`;  if (null !== data.required_viewing_time) {    let time = timeCpaFormatted(data.required_viewing_time);    msgHtml = `${time} / ${rewardHtml}<br>${runHtml}`;  }  if (null !== data.description) {    msgHtml = `${data.description} / ${rewardHtml}<br>${runHtml}`;  }  userCpaEl.querySelector('._se-cpa-icon').src = data.icon_url;  userCpaEl.querySelector('._se-title').textContent = data.title;  userCpaEl.querySelector('._se-msg').innerHTML = msgHtml;  enableCpaUpdateClick();}function fillCpaAreOver(userCpaEl) {  userCpaEl.querySelector('._se-cpa-icon').src = 'https://surfearner.com/images/push/icon_push_check.svg';  userCpaEl.querySelector('._se-title').textContent = 'Вы выполнили все доступные задания.';  userCpaEl.querySelector('._se-msg').innerHTML = '<a href="https://surfearner.com/referral/links">Самое время заработать на партнёрке >></a>';  userCpaEl.querySelector('._se-update_btn').remove();}function disableCpaUpdateClick() {  let userCpaEl = document.getElementById('userinfo-cpa');  let updateBtnEl = userCpaEl.querySelector('._se-update_btn');  updateBtnEl.removeEventListener('click', getNextCpa);}function enableCpaUpdateClick() {  let userCpaEl = document.getElementById('userinfo-cpa');  let updateBtnEl = userCpaEl.querySelector('._se-update_btn');  updateBtnEl.addEventListener('click', getNextCpa);}function getNextCpa(event = null) {  if (event) {    disableCpaUpdateClick();    let target = getCpaUpdateClickTarget(event);    target.classList.add('loading');  }  chrome.runtime.sendMessage({    query: 'getCpa',    data: {auth: cm.get('extauth')}  }, (response) => {    response = JSON.parse(response.data);    let data = response.data;    $('#popup-cpa-loader').hide();    let userCpaEl = document.getElementById('userinfo-cpa');    if ('success' === response.status) {      fillCpaElement(userCpaEl, data);    }    else {      fillCpaAreOver(userCpaEl);    }    userCpaEl.classList.remove("hidden");    if (event) {      let target = getCpaUpdateClickTarget(event);      target.classList.remove('loading');    }  });}var popup = {  reset:         0,  info_loaded:   false,  banner:        false,  host:          function () {    return Math.random() > 0.5 ? 'https://s3.surfearner.com' : 'https://s4.surfearner.com';  },  showSection:   function (sID) {    $('section.single').hide();    $('#' + sID).show();    this._autoheight();  },  switch_toggle: function () {    ++this.reset;    var p = this;    if (this.reset > 6) {      this.reset = 0;      popup.msg({        text: 'Сбросить настройки расширения?', bnt: "Да", fn: function () {          chrome.runtime.sendMessage({reset: 1});          popup.switch_toggle();        }      });      return;    }    chrome.storage.local.get('state', function (v) {      if (v.state === 'false')        p.ext_on();      else        p.ext_off();      // убрать баннер      chrome.tabs.query({active: true, currentWindow: true}, function (tabs) {        chrome.tabs.sendMessage(tabs[0].id, {switch_toggle: v.state === 'false' ? "on" : "off"});      });    });  },  ext_on:        function () {    $('.switch-toggle').text('Включено').removeClass('off').attr('title', 'Отключить');    chrome.storage.local.set({'state': 'true'});    chrome.storage.local.set({"ext_autostart": null});    // popup.showSection('userinfo');    // if(!this.info_loaded)    this.info_loaded = false;    this.load_info();    chrome.runtime.sendMessage({__se_icon: 'img/icon24.png'});  },  ext_off:       function () {    popup.showSection('auth');    $('.switch-toggle').text('Отключено').addClass('off').attr('title', 'Включить');    chrome.storage.local.set({"ext_autostart": null});    chrome.storage.local.set({'state': 'false'});    autostart_msg();    chrome.runtime.sendMessage({__se_icon: 'img/gray24.png'});  },  msg:           function (obj) {    if (obj.constructor !== Object) return;    $('#message .msg').html(obj.text);    if (obj.btn === undefined) obj.btn = 'OK';    if (obj.fn === undefined) obj.fn = function () {      popup.hidemsg();//      document.getElementById('message').style.display = 'none';      return false;    };    if (obj.btn) {      $('#message .msg').append('<br><br><a href="#" class="button" onclick="document.getElementById(\'message\').style.display = \'none\';return false;">OK</a>');      $('#message .button').text(obj.btn).click(obj.fn).show();    } else      $('#message .button').hide();    $('.block, #right-block .gray, #left-block .gray').hide();    popup.showSection('message');    this._autoheight();  },  hidemsg:       function () {    $('#message').hide();    $('#left-block .gray, #right-block .gray').show();    this._autoheight();  },  _autoheight:   function () {    //$('body').css('height','auto');    //$('body').height($('body').height());    //$('body').height($('#footer-wrap').position().top + $('#footer-wrap').height() - 20);  },  loadInfoTried: false,  load_info:     function () {    chrome.runtime.sendMessage({        query: "loadInfo",        data:  {auth: cm.get('extauth')}      },      function (response) {        if (response.success) {          var d = JSON.parse(response.data);          $('#loader').hide();          popup.info_loaded = true;          if (d && d.user) {            popup.showSection('userinfo');            $('#balanceRUB .value a').text(d.balanceRUB + ' RUB');            $('#balanceBNS .value a').text(d.balanceBNS + ' BNS');            $('#balanceADV .value a').text(d.balanceADV + ' RUB');            if (d.premium) {              $('#userinfo-quality').addClass('hidden');              $('#userinfo-premium').removeClass('hidden');              $('#userinfo-premium .value').text(d.premium);            }            if (d.vacation) {              $('#userinfo-referral').addClass('hidden');              $('#userinfo-vacation').removeClass('hidden');              $('#userinfo-vacation .value').text(d.vacation);              $('#userinfo-rating').removeClass('left');            } else if (!d.captcha) {              $('#userinfo-referral').addClass('hidden');              $('#userinfo-captcha').removeClass('hidden');              $('#userinfo-rating').removeClass('left');            }            $('#userinfo-rating .value').text(d.rating);            if ('100' === d.rating) {              $('#userinfo-rating .cell').removeClass('hovered');            } else {              $('#userinfo-rating .today').text(d.ratingToday + ' за сегодня');              switch (d.ratingColor) {                case 'green':                  $('#userinfo-rating .today').addClass('clr-green');                  break;                case 'red':                  $('#userinfo-rating .today').addClass('clr-red');                  break;              }            }            $('#userinfo-referral .value').text(d.refersAll);            if (d.refersToday > 0) {              $('#userinfo-referral center').addClass('clr-green');            }            $("#userinfo-referral center .today").text((d.refersToday > 0 ? '+' : '') + d.refersToday + ' за сегодня');            $("#userinfo-quality .value").text(d.qual);            $("#userinfo-quality .actions .done").text(d.qualDone);            $("#userinfo-quality .actions .all").text(d.qualAll);            $("#userinfo-quality .full-date").text(d.qualDate);            switch (d.qual_status) {              case 'green':                $("#userinfo-quality i").removeClass("icon-minus-square-regular");                $("#userinfo-quality i").addClass("icon-check");                $("#userinfo-quality .actions .done").addClass("clr-green");                $("#userinfo-quality .full-date").addClass("clr-green");                $("#userinfo-quality .full-date").removeClass("hidden");                break;              case 'orange':                $("#userinfo-quality").removeClass("quality-no");                $("#userinfo-quality").addClass("quality-24");                $("#userinfo-quality i").removeClass("icon-minus-square-regular");                $("#userinfo-quality i").addClass("icon-check");                $("#userinfo-quality .actions .done").addClass("clr-green");                $("#userinfo-quality .full-date").addClass("clr-red");                $("#userinfo-quality .full-date").removeClass("hidden");                break;              case 'red':                $("#userinfo-quality").removeClass("quality-24");                $("#userinfo-quality").addClass("quality-no");                $("#userinfo-quality i").removeClass("icon-check");                $("#userinfo-quality i").addClass("icon-minus-square-regular");                $("#userinfo-quality .actions .done").addClass("clr-red");                $("#userinfo-quality center a").removeClass("hidden");                break;            }            for (var row in d.push) {              if (d.push [row])                $('#push-' + row).attr('checked', 'checked');              else                $('#push-' + row).removeAttr('checked');            }            if (d.adult)              $('#push-adult').attr('checked', 'checked');            else              $('#push-adult').removeAttr('checked');            for (var row in d.profit) {              if ('refer' === row)                ;//$('#row-'+row+' .quantity').text( d.profit [row].quantity + ' чел.');              else                $('#row-' + row + ' .quantity').text(d.profit [row].quantity);              if ('surfvideo' === row || 'gift' === row)                $('#row-' + row + ' .profit').html('<span class="f-14-600">' + d.profit [row].profit + '</span> BNS');              else                $('#row-' + row + ' .profit').html('<span class="f-14-600">' + d.profit [row].profit + '</span> RUB');            }            $('.user').html('');            for (var i in d.user) {              if (i === 'length' || d.user[i].val === false) continue;              if (d.user[i].name === "Капча: ") {                if (d.user[i].val) {                  $('.user').append('<div>Капча: <span class="right"><span class="list_value"><img src="https://surfearner.com/img/approved.png" alt="Ввод не требуется" /></span></span></div>');                } else {                  $('.user').append('<div><span style="color:red;">Капча: </span><span class="right"><span class="list_value"><a href="https://surfearner.com/user/captcha" target="_blank">Ввести</a></span></span></div>');                }                continue;              }              if (d.user[i].name === "Баланс: ") {                $('.user-balance ._val').text(d.user[i].val + ' RUB');                continue;              }              if (d.user[i].name === "Мой ID: ") {                $('.user-id ._val').text(d.user[i].val);                popup.uid = parseInt(d.user[i].val);                continue;              }              $('.user').append('<div>' + strip_html(d.user[i].name) + '<span class="right"><span class="list_value">' + strip_html(d.user[i].val) + '</span>' + strip_html(d.user[i].postfix) + '</span></div>');            }            $('.user-id, .user-balance').fadeIn();            if (d.extauth)              chrome.storage.local.set({"extauth": 'id_' + d.extauth});            if (d.banner) {              $('#banner a').attr('href', d.banner.link);              $('#banner img').attr('src', d.banner.img);              $('#banner').show();              popup.banner = true;            } else {              $('#banner').hide();              popup.banner = false;            }            popup._autoheight();            var heighest = $('#left-block .gray').height() > $('#right-block .gray').height() ? $('#left-block .gray').height() : $('#right-block .gray').height();            $('#left-block .gray').height(heighest);            $('#right-block .gray').height(heighest);            if (cm.get('finished'))              $('.today li:first').append('<img src="/img/mini-loader.gif" title="Обновление статистики" style="margin: 0 0 2px 3px;" />');            seytStateListener();            $('#seyt-reset').on('click', () => {              chrome.runtime.sendMessage(new InfoRequest(), (response) => {                if (response && response.tabId && response.windowId) {                  chrome.tabs.sendMessage(response.tabId, new CommandToBackendMsg(BG_ACTION_RELOAD, response));                }              });            });          } else {            if (popup.loadInfoTried) {              popup.showSection('auth');              $('.user-id, .user-balance').hide();            } else {              console.log("window.open");              popup.loadInfoTried = true;              window.open('https://surfearner.com/ext/auth?noalert=true', 'SurfEarner - Авторизация', 'top=' + ((window.screen.availHeight - 460) / 2) + ',left=' + ((window.screen.availWidth - 740) / 2) + ',width=740,height=460,menubar=no,location=no,directories=no,resizable=no,scrollbars=yes,status=yes');              popup._autoheight();              window.close();            }          }        } else {          if (popup.loadInfoTried) {            $('.user-id, .user-balance').hide();            popup.msg({text: 'Попробуйте позже', btn: false});          }        }      }    );    getNextCpa();  }};var settings = {  anim_type: 3,  opened:    false,  btn_click: function () {    $('._anim_type[value="' + settings.anim_type + '"]').attr('checked', 'checked');    if (!settings.opened)      popup.showSection('settings');    else      popup.showSection('userinfo');    settings.opened = !settings.opened;    popup._autoheight();  },  reset:     function () {    chrome.runtime.sendMessage({reset: 1});    settings.btn_click();    var link = Math.random() > 0.5      ? 'https://s3.surfearner.com/ext/authcheck?reset'      : 'https://s4.surfearner.com/ext/authcheck?reset';    popup.msg({      text:        'Сброс успешно произведен. Показ баннеров возобновится в течение нескольких минут.' +        '<iframe src="' + link + '" style="display:none"></iframe>', btn: 'OK'    });  }};document.addEventListener('DOMContentLoaded', function () {  setTimeout(cmLoaded, 100);});function cmLoaded() {  if (cm.loaded) {    init();  } else {    setTimeout(cmLoaded, 100);  }}function init() {  $('body').hide().fadeIn(1000);  $('.switch-toggle').click(function () {    popup.switch_toggle();  });  chrome.storage.local.get('state', function (v) {    popup.load_info();    if (v.state === 'false') {      $('.switch-toggle').text('Отключено').addClass('off').attr('title', 'Включить');      setTimeout(function () {        $('.switch-toggle').addClass('animate');      }, 200);      autostart_msg();      chrome.runtime.sendMessage({__se_icon: 'img/gray24.png'});    } else {      $('.switch-toggle').addClass('animate');      chrome.runtime.sendMessage({__se_icon: 'img/icon24.png'});    }    chrome.storage.local.get("ext_autostart", function (d) {      var time = d.ext_autostart;      var _time = parseInt((time - (new Date()).valueOf()) / 1000);      if (v.state === 'false' && (time && _time < 1))        popup.switch_toggle();    });  });  chrome.storage.local.get("anim_type", function (d) {    var anim_type = d.anim_type;    if (anim_type)      settings.anim_type = parseInt(anim_type);  });  $('.lk_btn').click(function () {    window.open('https://surfearner.com/partner');  });  $('.settings_btn').click(settings.btn_click);  $('.reset_btn').click(settings.reset);  $('._anim_type').change(function () {    var v = parseInt($(this).val());    settings.anim_type = v;    chrome.storage.local.set({'anim_type': v});  });  $('.header').click(function () {    window.open('https://surfearner.com/partner');  });  $('#btn-auth').click(function () {    window.open('https://surfearner.com/ext/auth', 'SurfEarner - Авторизация', 'top=' + ((window.screen.availHeight - 460) / 2) + ',left=' + ((window.screen.availWidth - 740) / 2) + ',width=740,height=460,menubar=no,location=no,directories=no,resizable=no,scrollbars=yes,status=yes');    popup._autoheight();  });  $('#userinfo-table input, #adult-content input').click(    function () {      var id = this.id.replace(/^push-/, "");      chrome.runtime.sendMessage({          query: "subscribe",          data:  {uid: popup.uid, sub: id, state: this.checked}        },        function (response) {        }      );    });  $('#userinfo-vacation a').click(    function () {      var id = this.id.replace(/^push-/, "");      chrome.runtime.sendMessage({          query: "vacation",          data:  {uid: popup.uid}        },        function (response) {          var resp;          if (response.success) {            try {              resp = JSON.parse(response.data);            } catch (e) {              return;            }          } else            return;          if (resp.success) {            $("#userinfo-vacation").addClass('hidden');            $("#userinfo-referral").removeClass('hidden');          } else {            console.log('ERROR', resp);          }        }      );    });  let version = chrome.runtime.getManifest().version;  document.getElementById('version').innerText = `Версия ${version}`;}function autostart_msg() {  chrome.storage.local.get("ext_autostart", function (d) {    var v = d.ext_autostart;    var time = v ? parseInt((v - (new Date()).valueOf()) / 1000) : 0;    if (time < 1) {      popup.msg({        text: 'Расширение отключено.<br/><br/><span class="m">Настройте таймер ниже, если хотите, чтобы оно включилось автоматически</span><br/><br/>Включить через<br/><select id="autostart"><option value="300">5 минут</option><option value="900">15 минут</option><option value="1800">30 минут</option><option value="3600">1 час</option><option value="10800">3 часа</option><option value="21600">6 часов</option></select>',        btn:  'ОК',        fn:   function () {          var time = parseInt($('#autostart').val()) * 1000;          chrome.storage.local.set({"ext_autostart": (new Date()).valueOf() + time});          autostart_msg();        }      });    } else {      popup.msg({        text: 'Расширение будет включено автоматически<br>через <b>' + beauty_date(v / 1000) + '</b>',        btn:  'Включить сейчас',        fn:   function () {          popup.ext_on();        }      });      autostart_timer();    }  });}function autostart_timer() {  chrome.storage.local.get("ext_autostart", function (d) {    var v = d.ext_autostart;    var time = v ? parseInt((v - (new Date()).valueOf()) / 1000) : 0;    if (time < 1) {      popup.ext_on();    } else {      if (!settings.opened)        popup.msg({          text: 'Расширение будет включено автоматически<br>через <b>' + beauty_date(v / 1000) + '</b>',          btn:  'Включить сейчас',          fn:   function () {            popup.ext_on();          }        });      setTimeout(autostart_timer, 1000);    }  });}function plural(number, one, two, five) {  number = Math.abs(number);  number %= 100;  if (number >= 5 && number <= 20) {    return five;  }  number %= 10;  if (number === 1) {    return one;  }  if (number >= 2 && number <= 4) {    return two;  }  return five;};function beauty_date(time) {  var c_time = parseInt((new Date()).valueOf() / 1000);  var days = Math.floor((time - c_time) / 86400), act, hours, mins, sec;  if (days < 1) {    hours = Math.floor((time - c_time) / 3600);    if (!hours) {      mins = Math.round((time - c_time) / 60);      if (!mins || mins === 1) {        sec = Math.round((time - c_time) % 60);        act = sec + plural(sec, ' секунду', ' секунды', ' секунд');      } else        act = mins + plural(mins, ' минуту', ' минуты', ' минут');    } else {      act = hours + plural(hours, ' час ', ' часа ', ' часов ');      mins = Math.floor(((time - c_time) % 3600) / 60);      if (mins)        act += mins + plural(mins, ' минуту', ' минуты', ' минут');    }  } else    act = days + plural(days, ' день', ' дня', ' дней');  return act;}function strip_html(html) {  return (html.constructor === String ? html.replace(/(<([^>]+)>)/ig, "") : html);}